{"version":3,"sources":["inputData/InputData.js","tableContent/TableContent.js","main/Main.js","App.js","serviceWorker.js","index.js"],"names":["InputData","props","paper","marginTop","padding","input","marginLeft","marginRight","marginBottom","handleName","event","setState","name","target","value","handleLastName","lastName","handleAge","age","handleClick","preventDefault","state","length","user","Axios","post","then","res","status","update","Paper","elevation","style","this","TextField","label","onChange","type","Button","variant","color","height","margin","onClick","Component","TableContent","get","rows","data","bind","console","log","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","id","scope","theme","createMuiTheme","palette","textPrimary","main","primary","light","dark","contrastText","secondary","footer","backgroundColor","Footer","Container","maxWidth","Typography","Link","href","Copyright","align","Date","getFullYear","Main","ref1","current","React","createRef","Fragment","ThemeProvider","className","CssBaseline","AppBar","position","Toolbar","Grid","container","direction","justify","alignItems","item","xs","Divider","ref","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.123cb268.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport PropTypes from 'prop-types';\r\nimport { Paper, TextField, Button } from '@material-ui/core';\r\n\r\nexport class InputData extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: '', lastName: '', age: '' }\r\n  }\r\n\r\n  paper = {\r\n    marginTop: \"2vh\",\r\n    padding: \"2%\"\r\n  }\r\n\r\n  input = {\r\n    marginTop: 8,\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    marginBottom: 8\r\n  }\r\n\r\n  handleName = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleLastName = (event) => {\r\n    this.setState({ lastName: event.target.value });\r\n  }\r\n\r\n  handleAge = (event) => {\r\n    this.setState({ age: event.target.value });\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.name.length === 0)\r\n      return;\r\n    if (this.state.lastName.length === 0)\r\n      return;\r\n    if (this.state.age.length === 0)\r\n      return;\r\n\r\n    const user = {\r\n      name: this.state.name,\r\n      lastName: this.state.lastName,\r\n      age: this.state.age\r\n    };\r\n\r\n    Axios\r\n      .post(`http://localhost:8080/api/v1/users`, user)\r\n      .then(res => {\r\n        if (res.status === 200)\r\n          this.setState({\r\n            name: '',\r\n            lastName: '',\r\n            age: ''\r\n          });\r\n        this.props.update(true);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Paper elevation={3} style={this.paper}>\r\n        <TextField\r\n          label=\"Nombre\"\r\n          value={this.state.name}\r\n          onChange={this.handleName}\r\n          style={this.input}\r\n        />\r\n        <TextField\r\n          label=\"Apellido\"\r\n          value={this.state.lastName}\r\n          onChange={this.handleLastName}\r\n          style={this.input}\r\n        />\r\n        <TextField\r\n          label=\"Edad\"\r\n          value={this.state.age}\r\n          onChange={this.handleAge}\r\n          type=\"number\"\r\n          style={this.input}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{ height: 48, margin: 8 }}\r\n          onClick={this.handleClick}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nInputData.propTypes = {\r\n  name: PropTypes.string,\r\n  lastName: PropTypes.string,\r\n  age: PropTypes.number\r\n}\r\n\r\nexport default InputData;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport Axios from 'axios';\r\n\r\nexport class TableContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { rows: [] }\r\n    this.update = this.update.bind(this);\r\n    console.log(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update();\r\n  }\r\n\r\n  update = () => {\r\n    Axios\r\n      .get(`http://localhost:8080/api/v1/users`)\r\n      .then(res => {\r\n        this.setState({ rows: res.data })\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Nombre</TableCell>\r\n              <TableCell>Apellido</TableCell>\r\n              <TableCell>Edad</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {this.state.rows.map(row => {\r\n              return (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell>{row.lastName}</TableCell>\r\n                  <TableCell>{row.age}</TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableContent;\r\n","import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link, Grid, Container, CssBaseline, Divider } from '@material-ui/core';\r\n\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport InputData from '../inputData/InputData';\r\nimport TableContent from '../tableContent/TableContent';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    textPrimary: {\r\n      main: '#fff'\r\n    },\r\n    primary: {\r\n      light: '#58a5f0',\r\n      main: '#0277bd',\r\n      dark: '#004c8c',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#62727b',\r\n      main: '#37474f',\r\n      dark: '#102027',\r\n      contrastText: '#fff',\r\n    },\r\n  }\r\n});\r\n\r\nconst footer = {\r\n  marginTop: 'auto',\r\n  backgroundColor: \"#62727b\",\r\n  color: \"#fff\",\r\n  padding: '1%'\r\n}\r\n\r\nexport class Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref1 = React.createRef();\r\n    this.update = this.update.bind(this);\r\n  }\r\n  \r\n  update = value => {\r\n    this.ref1.current.update();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ThemeProvider theme={theme}>\r\n          <div className=\"App\">\r\n            <CssBaseline />\r\n            <AppBar position=\"static\">\r\n              <Toolbar >\r\n                <Typography variant=\"h6\">\r\n                  Arep App\r\n              </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <Grid container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={1} />\r\n              <Grid item xs>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <InputData update={this.update} />\r\n                  </Grid>\r\n                  <Grid item xs={12} style={{ height: 8, marginTop: 8, }}>\r\n                    <Divider style={{ backgroundColor: \"#62727b\" }} />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TableContent ref={this.ref1} />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={1} />\r\n            </Grid>\r\n            <Footer />\r\n          </div>\r\n        </ThemeProvider>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={footer}>\r\n      <Container maxWidth=\"sm\">\r\n        <Typography variant=\"body1\">Sitio creado para le laboratorio de Patrones Arquitecturales</Typography>\r\n        <Link color=\"inherit\" href=\"http://patronesarquitecturales.s3-website-us-east-1.amazonaws.com\">\r\n          Tutorial\r\n            </Link>\r\n        <Copyright />\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" style={{ color: \"#fff\" }} align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://github.com/Arep-Nico\">\r\n        Nicolas Cardenas\r\n      </Link>{' '} {new Date().getFullYear()}{'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport './App.css';\n\nimport Main from './main/Main';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}